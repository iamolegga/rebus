{{- /*gotype: github.com/iamolegga/rebus/internal/generator.File*/ -}}
// Code generated by github.com/iamolegga/rebus; DO NOT EDIT.
{{ define "method" -}}
({{ if .Ctx }}ctx context.Context, {{end}}input {{ .Package }}.{{ .Input }}) {{ if ne .Output "" }}({{ .Package }}.{{ .Output }}, error){{ else }}error{{ end }}
{{- end }}
package {{ .Package }}

import ({{ range .Imports }}
	{{ . | printf "%q" }}{{ end }}
)

type Bus interface { {{ range .Handlers }}
	{{ .Input }}Executor{{ end }}{{ range .Handlers }}
	Register{{ .Input }}Handler({{ .Input }}Handler){{ end }}
}
{{ range .Handlers }}
type {{ .Input }}Executor interface {
	Exec{{ .Input }}{{ template "method" . }}
}
{{ end }}
func New() Bus {
	return &bus{}
}

type bus struct { {{ range .Handlers }}
	{{ .Input }}Handler{{ end }}
}
{{ range .Handlers }}
func (b *bus) Exec{{ .Input }}{{ template "method" . }} {
	return b.{{ .Input }}Handler.Handle({{ if .Ctx }}ctx, {{end}}input)
}
{{ end }}{{ range .Handlers }}
func (b *bus) Register{{ .Input }}Handler(h {{ .Input }}Handler) {
	b.{{ .Input }}Handler = h
}
{{ end }}{{ range .Handlers }}
type {{ .Input }}Handler interface {
	Handle{{ template "method" . }}
}
{{ end }}