
[TestSimple - 1]
// Code generated by github.com/iamolegga/rebus; DO NOT EDIT.

package bus

import (
    "github.com/iamolegga/rebus/testdata/simple"
)

type Bus interface { 
    Command1Executor
    Query1Executor
    RegisterCommand1Handler(Command1Handler)
    RegisterQuery1Handler(Query1Handler)
}

type Command1Executor interface {
    ExecCommand1(input simple.Command1) error
}

type Query1Executor interface {
    ExecQuery1(input simple.Query1) (simple.Query1Result, error)
}

func New() Bus {
    return &bus{}
}

type bus struct { 
    Command1Handler
    Query1Handler
}

func (b *bus) ExecCommand1(input simple.Command1) error {
    return b.Command1Handler.Handle(input)
}

func (b *bus) ExecQuery1(input simple.Query1) (simple.Query1Result, error) {
    return b.Query1Handler.Handle(input)
}

func (b *bus) RegisterCommand1Handler(h Command1Handler) {
    b.Command1Handler = h
}

func (b *bus) RegisterQuery1Handler(h Query1Handler) {
    b.Query1Handler = h
}

type Command1Handler interface {
    Handle(input simple.Command1) error
}

type Query1Handler interface {
    Handle(input simple.Query1) (simple.Query1Result, error)
}

---
